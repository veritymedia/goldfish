name: "Test Upload"
on:
  workflow_dispatch:

  # This Action only starts when you go to Actions and manually run the workflow.

jobs:
  package:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [1.20.7]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
    
       
    

      - uses: actions/upload-artifact@v3
        with:
          name: app-v${{ env.version }}
          path: ./build/appicon.png


       # With GH cli
      - name: Create Release
        run: |
          gh release create "${{ github.ref_name }}" \
            --repo="${{ github.repository }}" \
            --title="Release ${{ github.ref_name }}" \
            --notes="Release notes"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_PAT }}

      - name: Delay for API synchronization
        run: |
          echo "Waiting for API synchronization"
          sleep 3

      - name: Upload Release Asset
        run: |
          gh release upload "${{ github.ref_name }}" /home/runner/work/goldfish/goldfish/build/appicon.png \
            --repo="${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_PAT }}

      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       ./build/bin/linux/goldfish-linux
      #       ./build/bin/linux/goldfish-linux

      # WITH ACTIONS

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./build/bin/linux/
      #     asset_name: goldfish-linux
      #     asset_content_type: application/octet-stream
