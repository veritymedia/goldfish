name: "Release on tag push"

on:
  workflow_dispatch:

jobs:
  build-release:
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [1.20.7]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup NODE
        uses: actions/setup-node@v2
        with:
          node-version: 20.5.1

      - name: Check NPM version
        run: npm --version
      - name: Install wails build dependencies (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev pkg-config gcc npm

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Run Wails Doctor
        run: wails doctor

      - name: Build Wails app linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          wails build -o goldfish-linux

      - name: upload artifacts linux
        if: matrix.platform == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: goldfish-linux
          path: ./build/bin/linux/*

      # RELEASE and UPLOAD

      # With GH cli
      - name: Create Release
        run: |
          gh release create "${{ github.ref_name }}" \
            --repo="${{ github.repository }}" \
            --title="${{ github.ref_name }}" \
            --notes="Release notes"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_PAT }}

      - name: Delay for API synchronization
        run: |
          echo "Waiting for API synchronization"
          sleep 3

      - name: Upload Release Asset
        run: |
          gh release upload "${{ github.ref_name }}" /home/runner/work/goldfish/goldfish/build/bin/goldfish-linux \
            --repo="${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_PAT }}

      #  BASIC ONE WHICH (KIND OF) WORKS
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: app-v${{ env.version }}${{env.ref}}
      #     path: ./build/bin/*`

      # WITH ACTIONS

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./build/bin/linux/
      #     asset_name: goldfish-linux
      #     asset_content_type: application/octet-stream
